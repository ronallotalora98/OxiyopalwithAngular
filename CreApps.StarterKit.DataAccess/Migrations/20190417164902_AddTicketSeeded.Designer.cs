// <auto-generated />
using System;
using CreApps.StarterKit.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CreApps.StarterKit.DataAccess.Migrations
{
    [DbContext(typeof(StarterKitDbContext))]
    [Migration("20190417164902_AddTicketSeeded")]
    partial class AddTicketSeeded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CreApps.StarterKit.Models.Priority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("PriorityName");

                    b.Property<DateTime>("UpdatedOn");

                    b.HasKey("Id");

                    b.ToTable("Priority");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2019, 4, 17, 11, 49, 1, 963, DateTimeKind.Local).AddTicks(3526),
                            PriorityName = "Critical",
                            UpdatedOn = new DateTime(2019, 4, 17, 11, 49, 1, 963, DateTimeKind.Local).AddTicks(3530)
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2019, 4, 17, 11, 49, 1, 963, DateTimeKind.Local).AddTicks(4296),
                            PriorityName = "Urgent",
                            UpdatedOn = new DateTime(2019, 4, 17, 11, 49, 1, 963, DateTimeKind.Local).AddTicks(4299)
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2019, 4, 17, 11, 49, 1, 963, DateTimeKind.Local).AddTicks(4305),
                            PriorityName = "Medium",
                            UpdatedOn = new DateTime(2019, 4, 17, 11, 49, 1, 963, DateTimeKind.Local).AddTicks(4305)
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2019, 4, 17, 11, 49, 1, 963, DateTimeKind.Local).AddTicks(4307),
                            PriorityName = "Low",
                            UpdatedOn = new DateTime(2019, 4, 17, 11, 49, 1, 963, DateTimeKind.Local).AddTicks(4307)
                        });
                });

            modelBuilder.Entity("CreApps.StarterKit.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("StatusName");

                    b.Property<DateTime>("UpdatedOn");

                    b.HasKey("Id");

                    b.ToTable("Status");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2019, 4, 17, 11, 49, 1, 963, DateTimeKind.Local).AddTicks(5329),
                            StatusName = "Pending",
                            UpdatedOn = new DateTime(2019, 4, 17, 11, 49, 1, 963, DateTimeKind.Local).AddTicks(5332)
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2019, 4, 17, 11, 49, 1, 963, DateTimeKind.Local).AddTicks(6021),
                            StatusName = "In progress",
                            UpdatedOn = new DateTime(2019, 4, 17, 11, 49, 1, 963, DateTimeKind.Local).AddTicks(6022)
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2019, 4, 17, 11, 49, 1, 963, DateTimeKind.Local).AddTicks(6027),
                            StatusName = "Resolved",
                            UpdatedOn = new DateTime(2019, 4, 17, 11, 49, 1, 963, DateTimeKind.Local).AddTicks(6028)
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2019, 4, 17, 11, 49, 1, 963, DateTimeKind.Local).AddTicks(6029),
                            StatusName = "Closed",
                            UpdatedOn = new DateTime(2019, 4, 17, 11, 49, 1, 963, DateTimeKind.Local).AddTicks(6029)
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2019, 4, 17, 11, 49, 1, 963, DateTimeKind.Local).AddTicks(6031),
                            StatusName = "Discarted",
                            UpdatedOn = new DateTime(2019, 4, 17, 11, 49, 1, 963, DateTimeKind.Local).AddTicks(6031)
                        });
                });

            modelBuilder.Entity("CreApps.StarterKit.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("Description");

                    b.Property<int>("PriorityId");

                    b.Property<int>("StatusId");

                    b.Property<string>("Subject");

                    b.Property<int>("TypeId");

                    b.Property<DateTime>("UpdatedOn");

                    b.HasKey("Id");

                    b.HasIndex("PriorityId");

                    b.HasIndex("StatusId");

                    b.HasIndex("TypeId");

                    b.ToTable("Ticket");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2019, 4, 17, 11, 49, 1, 963, DateTimeKind.Local).AddTicks(6970),
                            Description = "I need create a bd to save tickets",
                            PriorityId = 1,
                            StatusId = 1,
                            Subject = "Create DB",
                            TypeId = 1,
                            UpdatedOn = new DateTime(2019, 4, 17, 11, 49, 1, 963, DateTimeKind.Local).AddTicks(6973)
                        });
                });

            modelBuilder.Entity("CreApps.StarterKit.Models.TicketType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("TicketTypeName");

                    b.Property<DateTime>("UpdatedOn");

                    b.HasKey("Id");

                    b.ToTable("TicketType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2019, 4, 17, 11, 49, 1, 960, DateTimeKind.Local).AddTicks(2227),
                            TicketTypeName = "Problem",
                            UpdatedOn = new DateTime(2019, 4, 17, 11, 49, 1, 961, DateTimeKind.Local).AddTicks(2015)
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2019, 4, 17, 11, 49, 1, 961, DateTimeKind.Local).AddTicks(4315),
                            TicketTypeName = "Incident",
                            UpdatedOn = new DateTime(2019, 4, 17, 11, 49, 1, 961, DateTimeKind.Local).AddTicks(4322)
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2019, 4, 17, 11, 49, 1, 961, DateTimeKind.Local).AddTicks(4331),
                            TicketTypeName = "New Requirement",
                            UpdatedOn = new DateTime(2019, 4, 17, 11, 49, 1, 961, DateTimeKind.Local).AddTicks(4331)
                        });
                });

            modelBuilder.Entity("CreApps.StarterKit.Models.Ticket", b =>
                {
                    b.HasOne("CreApps.StarterKit.Models.Priority", "Priority")
                        .WithMany("Tickets")
                        .HasForeignKey("PriorityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CreApps.StarterKit.Models.Status", "Status")
                        .WithMany("Tickets")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CreApps.StarterKit.Models.TicketType", "Type")
                        .WithMany("Tickets")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
