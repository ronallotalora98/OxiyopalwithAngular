// <auto-generated />
using System;
using CreApps.StarterKit.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CreApps.StarterKit.DataAccess.Migrations
{
    [DbContext(typeof(StarterKitDbContext))]
    partial class StarterKitDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CreApps.StarterKit.Models.Bodega", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("NombreBodega");

                    b.Property<DateTime>("UpdatedOn");

                    b.HasKey("Id");

                    b.ToTable("Bodega");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 259, DateTimeKind.Local).AddTicks(4831),
                            NombreBodega = "Bodega LLena",
                            UpdatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 259, DateTimeKind.Local).AddTicks(4835)
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 259, DateTimeKind.Local).AddTicks(5415),
                            NombreBodega = "Bodega Vacia",
                            UpdatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 259, DateTimeKind.Local).AddTicks(5415)
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 259, DateTimeKind.Local).AddTicks(5420),
                            NombreBodega = "Oxifull Bogota",
                            UpdatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 259, DateTimeKind.Local).AddTicks(5424)
                        });
                });

            modelBuilder.Entity("CreApps.StarterKit.Models.Cilindro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn");

                    b.Property<int>("EstadoId");

                    b.Property<DateTime>("FechaDeTraslado");

                    b.Property<DateTime>("FechaHoy");

                    b.Property<string>("MostrarUbicacion");

                    b.Property<string>("Serial");

                    b.Property<decimal>("Tamaño");

                    b.Property<int>("TipoContenidoId");

                    b.Property<int>("UbicacionId");

                    b.Property<DateTime>("UpdatedOn");

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.HasIndex("TipoContenidoId");

                    b.HasIndex("UbicacionId");

                    b.ToTable("Cilindro");
                });

            modelBuilder.Entity("CreApps.StarterKit.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("DireccionCliente");

                    b.Property<string>("DocumentoCliente");

                    b.Property<string>("NombreCliente");

                    b.Property<string>("TelefonoCliente");

                    b.Property<DateTime>("UpdatedOn");

                    b.HasKey("Id");

                    b.ToTable("Cliente");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 259, DateTimeKind.Local).AddTicks(7886),
                            DireccionCliente = "Calle 38a #16-50",
                            DocumentoCliente = "1118571567",
                            NombreCliente = "Ronall Otalora",
                            TelefonoCliente = "3114992296",
                            UpdatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 259, DateTimeKind.Local).AddTicks(7886)
                        });
                });

            modelBuilder.Entity("CreApps.StarterKit.Models.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("NombreEstado");

                    b.Property<DateTime>("UpdatedOn");

                    b.HasKey("Id");

                    b.ToTable("Estado");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 259, DateTimeKind.Local).AddTicks(2766),
                            NombreEstado = "LLeno",
                            UpdatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 259, DateTimeKind.Local).AddTicks(2774)
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 259, DateTimeKind.Local).AddTicks(3508),
                            NombreEstado = "Vacio",
                            UpdatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 259, DateTimeKind.Local).AddTicks(3512)
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 259, DateTimeKind.Local).AddTicks(3521),
                            NombreEstado = "Danañado",
                            UpdatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 259, DateTimeKind.Local).AddTicks(3521)
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 259, DateTimeKind.Local).AddTicks(3521),
                            NombreEstado = "En Mantenimiento",
                            UpdatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 259, DateTimeKind.Local).AddTicks(3521)
                        });
                });

            modelBuilder.Entity("CreApps.StarterKit.Models.Priority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("PriorityName");

                    b.Property<DateTime>("UpdatedOn");

                    b.HasKey("Id");

                    b.ToTable("Priority");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 238, DateTimeKind.Local).AddTicks(1660),
                            PriorityName = "Critical",
                            UpdatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 238, DateTimeKind.Local).AddTicks(1664)
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 238, DateTimeKind.Local).AddTicks(2261),
                            PriorityName = "Urgent",
                            UpdatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 238, DateTimeKind.Local).AddTicks(2261)
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 238, DateTimeKind.Local).AddTicks(2270),
                            PriorityName = "Medium",
                            UpdatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 238, DateTimeKind.Local).AddTicks(2270)
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 238, DateTimeKind.Local).AddTicks(2270),
                            PriorityName = "Low",
                            UpdatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 238, DateTimeKind.Local).AddTicks(2270)
                        });
                });

            modelBuilder.Entity("CreApps.StarterKit.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("StatusName");

                    b.Property<DateTime>("UpdatedOn");

                    b.HasKey("Id");

                    b.ToTable("Status");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 238, DateTimeKind.Local).AddTicks(3379),
                            StatusName = "Pending",
                            UpdatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 238, DateTimeKind.Local).AddTicks(3379)
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 238, DateTimeKind.Local).AddTicks(3891),
                            StatusName = "In progress",
                            UpdatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 238, DateTimeKind.Local).AddTicks(3895)
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 238, DateTimeKind.Local).AddTicks(3900),
                            StatusName = "Resolved",
                            UpdatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 238, DateTimeKind.Local).AddTicks(3900)
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 238, DateTimeKind.Local).AddTicks(3900),
                            StatusName = "Closed",
                            UpdatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 238, DateTimeKind.Local).AddTicks(3904)
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 238, DateTimeKind.Local).AddTicks(3904),
                            StatusName = "Discarted",
                            UpdatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 238, DateTimeKind.Local).AddTicks(3904)
                        });
                });

            modelBuilder.Entity("CreApps.StarterKit.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<int>("PriorityId");

                    b.Property<int>("StatusId");

                    b.Property<string>("Subject")
                        .IsRequired();

                    b.Property<int>("TypeId");

                    b.Property<DateTime>("UpdatedOn");

                    b.HasKey("Id");

                    b.HasIndex("PriorityId");

                    b.HasIndex("StatusId");

                    b.HasIndex("TypeId");

                    b.ToTable("Ticket");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 238, DateTimeKind.Local).AddTicks(4817),
                            Description = "I need create a bd to save tickets",
                            PriorityId = 1,
                            StatusId = 1,
                            Subject = "Create DB",
                            TypeId = 1,
                            UpdatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 238, DateTimeKind.Local).AddTicks(4821)
                        });
                });

            modelBuilder.Entity("CreApps.StarterKit.Models.TicketType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("TicketTypeName");

                    b.Property<DateTime>("UpdatedOn");

                    b.HasKey("Id");

                    b.ToTable("TicketType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 236, DateTimeKind.Local).AddTicks(9449),
                            TicketTypeName = "Problem",
                            UpdatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 237, DateTimeKind.Local).AddTicks(5601)
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 237, DateTimeKind.Local).AddTicks(7619),
                            TicketTypeName = "Incident",
                            UpdatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 237, DateTimeKind.Local).AddTicks(7628)
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 237, DateTimeKind.Local).AddTicks(7636),
                            TicketTypeName = "New Requirement",
                            UpdatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 237, DateTimeKind.Local).AddTicks(7636)
                        });
                });

            modelBuilder.Entity("CreApps.StarterKit.Models.TipoContenido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("NombreTipoContenido");

                    b.Property<DateTime>("UpdatedOn");

                    b.HasKey("Id");

                    b.ToTable("TipoContenido");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 259, DateTimeKind.Local).AddTicks(6406),
                            NombreTipoContenido = "Oxigeno",
                            UpdatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 259, DateTimeKind.Local).AddTicks(6406)
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 259, DateTimeKind.Local).AddTicks(6965),
                            NombreTipoContenido = "Acetileno",
                            UpdatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 259, DateTimeKind.Local).AddTicks(6969)
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 259, DateTimeKind.Local).AddTicks(6973),
                            NombreTipoContenido = "Mezcla",
                            UpdatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 259, DateTimeKind.Local).AddTicks(6973)
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 259, DateTimeKind.Local).AddTicks(6973),
                            NombreTipoContenido = "Nitrogeno",
                            UpdatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 259, DateTimeKind.Local).AddTicks(6977)
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 259, DateTimeKind.Local).AddTicks(6977),
                            NombreTipoContenido = "Argon",
                            UpdatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 259, DateTimeKind.Local).AddTicks(6977)
                        },
                        new
                        {
                            Id = 6,
                            CreatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 259, DateTimeKind.Local).AddTicks(6977),
                            NombreTipoContenido = "Dioxido De Carbono",
                            UpdatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 259, DateTimeKind.Local).AddTicks(6977)
                        });
                });

            modelBuilder.Entity("CreApps.StarterKit.Models.Ubicacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BodegaId");

                    b.Property<int>("ClienteId");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("UbicacionCilindro");

                    b.Property<DateTime>("UpdatedOn");

                    b.HasKey("Id");

                    b.HasIndex("BodegaId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Ubicacion");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BodegaId = 1,
                            ClienteId = 1,
                            CreatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 260, DateTimeKind.Local).AddTicks(745),
                            UbicacionCilindro = "Bodega",
                            UpdatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 260, DateTimeKind.Local).AddTicks(745)
                        },
                        new
                        {
                            Id = 2,
                            BodegaId = 1,
                            ClienteId = 1,
                            CreatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 260, DateTimeKind.Local).AddTicks(2085),
                            UbicacionCilindro = "Cliente",
                            UpdatedOn = new DateTime(2019, 5, 10, 15, 21, 12, 260, DateTimeKind.Local).AddTicks(2085)
                        });
                });

            modelBuilder.Entity("CreApps.StarterKit.Models.Cilindro", b =>
                {
                    b.HasOne("CreApps.StarterKit.Models.Estado", "Estado")
                        .WithMany("Cilindros")
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CreApps.StarterKit.Models.TipoContenido", "TipoContenido")
                        .WithMany("Cilindros")
                        .HasForeignKey("TipoContenidoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CreApps.StarterKit.Models.Ubicacion", "Ubicacion")
                        .WithMany("Cilindros")
                        .HasForeignKey("UbicacionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CreApps.StarterKit.Models.Ticket", b =>
                {
                    b.HasOne("CreApps.StarterKit.Models.Priority", "Priority")
                        .WithMany("Tickets")
                        .HasForeignKey("PriorityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CreApps.StarterKit.Models.Status", "Status")
                        .WithMany("Tickets")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CreApps.StarterKit.Models.TicketType", "Type")
                        .WithMany("Tickets")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CreApps.StarterKit.Models.Ubicacion", b =>
                {
                    b.HasOne("CreApps.StarterKit.Models.Bodega", "Bodega")
                        .WithMany("Ubicacions")
                        .HasForeignKey("BodegaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CreApps.StarterKit.Models.Cliente", "Cliente")
                        .WithMany("Ubicacions")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
